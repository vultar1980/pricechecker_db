INSERT INTO public.bullish_signals_monitoring (
    id,
    symbol,
    timeframe,
    current_price,
    score,
    rsi,
    atr,
    macd_histogram,
    golden_cross,
    bullish_engulfing,
    hammer,
    close_to_support,
    morning_star,
    three_white_soldiers,
    doji,
    increasing_volume,
    volume_spike,
    macd_crossover,
    price_above_ma50,
    price_above_ma200,
    rsi_bullish_divergence,
    falling_wedge_breakout,
    alert_triggered_at,
    created_at,
    bull_flag,
    break_above_r1,
    bb_squeeze_breakout,
    support_price,
    approaching_golden_cross,
    adx,
    ema200,
    supertrend_up,
    donchian_break20,
    donchian_break55,
    nr7,
    inside_bar,
    obv,
    mfi,
    cmf,
    klinger,
    klinger_signal,
    roc10,
    stochrsi_k,
    stochrsi_d,
    stochrsi_kxdupbull,
    rsi_bullish_regime,
    bars_since_macd_cross,
    bars_in_squeeze,
    weekly_confirm,
    btc_bear,
    bar_time,
    condition_set
)
SELECT s.id,
       s.symbol,
       s.timeframe,
       s.current_price,
       s.score,
       s.rsi,
       s.atr,
       s.macd_histogram,
       s.golden_cross,
       s.bullish_engulfing,
       s.hammer,
       s.close_to_support,
       s.morning_star,
       s.three_white_soldiers,
       s.doji,
       s.increasing_volume,
       s.volume_spike,
       s.macd_crossover,
       s.price_above_ma50,
       s.price_above_ma200,
       s.rsi_bullish_divergence,
       s.falling_wedge_breakout,
       s.alert_triggered_at,
       s.created_at,
       s.bull_flag,
       s.break_above_r1,
       s.bb_squeeze_breakout,
       s.support_price,
       s.approaching_golden_cross,
       s.adx,
       s.ema200,
       s.supertrend_up,
       s.donchian_break20,
       s.donchian_break55,
       s.nr7,
       s.inside_bar,
       s.obv,
       s.mfi,
       s.cmf,
       s.klinger,
       s.klinger_signal,
       s.roc10,
       s.stochrsi_k,
       s.stochrsi_d,
       s.stochrsi_kxdupbull,
       s.rsi_bullish_regime,
       s.bars_since_macd_cross,
       s.bars_in_squeeze,
       s.weekly_confirm,
       s.btc_bear,
       s.bar_time,
       REPLACE_ME AS condition_set
FROM public.bullish_signals s
LEFT JOIN public.bullish_signals_monitoring t
       ON s.id = t.id
WHERE s.id IN (REPLACE_ME)   -- <-- your condition_set each run
  AND t.id IS NULL;           -- <-- ensures no duplicate insert
